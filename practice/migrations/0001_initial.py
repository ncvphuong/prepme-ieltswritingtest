# Generated by Django 5.2.3 on 2025-06-19 23:36

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, help_text='Topic category (e.g., education, technology, environment)', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'practice_topic',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PracticeTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task_code', models.CharField(help_text='Unique task code (e.g., AC_T1_001, GT_T2_045)', max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('module_type', models.CharField(choices=[('academic', 'Academic'), ('general', 'General Training')], max_length=20)),
                ('task_number', models.IntegerField(choices=[(1, 'Task 1'), (2, 'Task 2')])),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='intermediate', max_length=20)),
                ('instruction', models.TextField(help_text='Task instructions for the student')),
                ('prompt', models.TextField(help_text='The actual writing prompt or question')),
                ('additional_materials', models.JSONField(blank=True, help_text='Additional materials like charts, graphs, diagrams (for Task 1)', null=True)),
                ('word_limit_min', models.PositiveIntegerField(default=150)),
                ('word_limit_max', models.PositiveIntegerField(default=250)),
                ('time_limit_minutes', models.PositiveIntegerField(default=20)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('average_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(9.0)])),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='practice.topic')),
            ],
            options={
                'db_table': 'practice_practicetask',
                'ordering': ['task_code'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(help_text="The user's written response")),
                ('word_count', models.PositiveIntegerField(default=0)),
                ('time_spent_seconds', models.PositiveIntegerField(blank=True, help_text='Actual time spent writing in seconds', null=True)),
                ('session_id', models.UUIDField(default=uuid.uuid4, help_text='For tracking multi-part sessions')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('assessed', 'Assessed')], default='draft', max_length=20)),
                ('is_practice_mode', models.BooleanField(default=True, help_text='Whether this is practice mode or test simulation')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='practice.practicetask')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'practice_submission',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='practice_su_user_id_f6b2db_idx'), models.Index(fields=['task'], name='practice_su_task_id_58791e_idx'), models.Index(fields=['submitted_at'], name='practice_su_submitt_38b7fe_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='practicetask',
            index=models.Index(fields=['module_type', 'task_number'], name='practice_pr_module__942314_idx'),
        ),
        migrations.AddIndex(
            model_name='practicetask',
            index=models.Index(fields=['difficulty_level'], name='practice_pr_difficu_3c9e32_idx'),
        ),
        migrations.AddIndex(
            model_name='practicetask',
            index=models.Index(fields=['is_active'], name='practice_pr_is_acti_99c4be_idx'),
        ),
    ]
